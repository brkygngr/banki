services:
  app_postgresql:
    image: postgres:latest
    container_name: app_postgres_db
    environment:
      POSTGRES_USER: ${APP_DB_USERNAME}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
      POSTGRES_DB: ${APP_DB_NAME}
    ports:
      - '${APP_DB_PORT}:5432'
    volumes:
      - app_postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --dbname=${APP_DB_NAME} --host=app_postgres_db --port=5432 --username=${APP_DB_USERNAME}" ]
      interval: 12s
      timeout: 12s
      retries: 3
    networks:
      - docker_network
  keycloak_postgresql:
    image: postgres:latest
    container_name: keycloak_postgres_db
    environment:
      POSTGRES_USER: ${KEYCLOAK_DB_USERNAME}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
    ports:
      - '${KEYCLOAK_DB_PORT}:5432'
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --dbname=${KEYCLOAK_DB_NAME} --host=keycloak_postgres_db --port=5432 --username=${KEYCLOAK_DB_USERNAME}" ]
      interval: 12s
      timeout: 12s
      retries: 3
    networks:
      - docker_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '${PGADMIN_PORT}:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      app_postgresql:
        condition: service_healthy
      keycloak_postgresql:
        condition: service_healthy
    networks:
      - docker_network

  keycloak:
    image: keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_postgres_db:5432/${KEYCLOAK_DB_NAME}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USERNAME}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      # KC_LOG_LEVEL: DEBUG
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_STRICT: 'false'
      KC_HTTP_ENABLED: 'true'
    command: start-dev
    ports:
      - '${KEYCLOAK_PORT}:8080'
    depends_on:
      keycloak_postgresql:
        condition: service_healthy
    networks:
      - docker_network

volumes:
  app_postgres_data:
  keycloak_postgres_data:
  pgadmin_data:

networks:
  docker_network:
    name: docker_network
